Moniel{
    Graph
        = (NodeDefinition | Chain)*
    NodeDefinition
    	= "+" (LiteralNode) ":" MetaNode
    Chain
        = NonemptyListOf<Block, edge>
    Block
        = Node | List | path
    Node (node)
        = (identifier ":")? (LiteralNode | MetaNode)
    LiteralNode (literal node)
        = nodeType -- simple
        | "(" nodeType Parameter* ")" -- parametrized
    MetaNode (metanode)
        = "{{" ForeignMetaNodeBody "}}" -- foreign
        | "{" Graph "}" -- native
    ForeignMetaNodeBody
        = (~"}}" any)*
    Parameter
        = "-" parameterName ParameterValue?
    ParameterValue
        = (~("-"|")"|"\n") any)+
    List (list)
        = "[" ListOf<ListItem, ","> "]"
    ListItem
        = Node | path
    nodeType
        = &upper (alnum | "_")+
    identifier (indentifier)
        = &lower (alnum | "_")+
    path (path)
        = nonemptyListOf<identifier, "/">
    parameterName
        = lower (alnum | "_")*
    edge (â†’)
        = "->"
    space
        += comment
    comment
        = ("#" | "//") (~"\n" any)* "\n"? -- singleline
        | "/*" (~"*/" any)* "*/" -- multiline
        | "|" (~"|" any)* "|" -- multiline2
}